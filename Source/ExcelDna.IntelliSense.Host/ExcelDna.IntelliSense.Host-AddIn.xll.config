<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  
  <!-- 
       This .config file contains the various configuration examples.
  
       * log4net
       * NLog
       * ExplicitDefaults
       * DisableLogging
       * VerboseLogging
       * FileLogging
  
  -->
  
  <!--  ============= Begin log4net ================  -->
  
  <!--
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <system.diagnostics>
    <sources>
      <source name="ExcelDna.Integration" switchValue="Verbose">
        <listeners>
          <remove name="Default" />
          <add name="LogDisplay" type="ExcelDna.Logging.LogDisplayTraceListener,ExcelDna.Integration">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Off"/>
          </add>
          <add name="Log4NetListener" type="Cavity.Diagnostics.Log4NetTraceListener,Logging" >
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="All"/>
          </add>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <log4net>
    <appender name="DebugAppender" type="log4net.Appender.DebugAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="LOG4NET: %date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="INFO" />
      <appender-ref ref="DebugAppender" />
    </root>
  </log4net>
  -->
  
  <!--  ============= End log4net ================  -->

  <!--  ============= Begin NLog ================  -->

  <!--
  <configSections>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
  </configSections>
  <system.diagnostics>
    <sources>
      <source name="ExcelDna.Integration" switchValue="Verbose">
        <listeners>
          <remove name="Default" />
          <add name="LogDisplay" type="ExcelDna.Logging.LogDisplayTraceListener,ExcelDna.Integration">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="Off"/>
          </add>
          <add name="NLogListener" type="NLog.NLogTraceListener,NLog" >
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="All"/>
          </add>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="debugger" xsi:type="Debugger" layout="NLOG: ${longdate}|${level:uppercase=true}|${logger}[${event-properties:EventID}]|${message}"/>
    </targets>
    <rules>
      <logger name="*" minlevel="Warn" writeTo="debugger" />
    </rules>
  </nlog>
  -->

  <!--  ============= End NLog ================  -->
  
  <!--  ============= Start ExplicitDefaults ============ -->
  <!-- 
       This part of the sample has a configuration that is equivalent to the default configuration (when there are no entries in the .config file.
       This is a good start for customization of the levels or adding trace listeners. 
       
       By default the TraceSource is configured to source only Warning, Error and Fatal.
              the configuration can override this by setting switchValue attribute of the source tag (or create an explicit SourceSwitch). 
              switchValue is a SourceLevel: Off, Critical, Error, Warning (default), Information, Verbose, All 
       The DefaultTraceListener is automatically added to all TraceSources. It will write messages to the Debug output (if a debugger is attached to Excel). 
           The DefaultTraceListener can be removed with a <remove name="Default"> tag in the <listeners> subtree.
       Excel-DNA adds the LogDisplayTraceListener to the TraceSource. By default, only Warning and Error messages are written to the LogDisplay,
           and the LogDisplay window is only shown if at least one Error message is written.
           The level of messages written to the LogDisplay can be adjusted by explicitly adding a "LogDisplay" listener of the relevant type, 
               and setting the listener's filter to an EventTypeFilter with the correct setting.
           The EventTypeFiler's initializeData attribute is again a SourceLevel, i.e. one of: Off, Critical, Error, Warning (default), Information, Verbose, All.
           We use this filter to disable the LogDisplay completely - just set the filter to initializeData="Off".
   -->
  
  <!--
  <system.diagnostics>
    <sources>
      <source name="ExcelDna.Integration" switchValue="Warning">
        <listeners>
          <add name="LogDisplay" type="ExcelDna.Logging.LogDisplayTraceListener,ExcelDna.Integration">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="All"/>
          </add>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  -->
  
  <!--  ============= End ExplicitDefaults ============ -->
  
  <!--  ============== Start DisableLogging ============= -->
  <!-- This sample configuration disables all logging -->

  <!--
  <system.diagnostics>
    <sources>
      <source name="ExcelDna.Integration" switchValue="Off">
      </source>
    </sources>
  </system.diagnostics>
  -->

  <!--  ============== End DisableLogging ============= -->

  <!--  ============== Start VerboseLogging ============= -->
  <!-- This sample configuration disables all logging -->
  
  <!--
  <system.diagnostics>
    <sources>
      <source name="ExcelDna.Integration" switchValue="All">
      </source>
    </sources>
  </system.diagnostics>
  -->
  <!--  ============== End VerboseLogging ============= -->

  <!-- =============== Start FileLogging ============== -->
  <!-- The initializeData attribute of the TextWriterTraceListener indicates the file path, either absolute or relative to the .xll.config file directory -->

  <system.diagnostics>
    <trace autoflush="false" indentsize="4"/>
    <sources>
      <source name="ExcelDna.IntelliSense" switchValue="All">
        <listeners>
          <!--<remove name="Default" />-->
          <!--<add name="LogDisplay" type="ExcelDna.Logging.LogDisplayTraceListener,ExcelDna.Integration">
            <filter type="System.Diagnostics.EventTypeFilter" initializeData="All"/>
          </add>-->
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  
  <!-- =============== End FileLogging ============== -->
  
</configuration>